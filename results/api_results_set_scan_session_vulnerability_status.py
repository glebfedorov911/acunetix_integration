from pydantic import BaseModel, field_validator

from base import BASE_URL
from .api_results_mixin import ApiResultsMixin


class VulnerabilityStatus(BaseModel):
    status: str
    comment: str | None = None

    @classmethod
    @field_validator("status")
    def validate_status(cls, v):
        STATUS = ["fixed", "ignored", "open", "false_positive"]

        if v not in STATUS:
            raise ValueError(f"status must be one of {STATUS}")
        return v

class ApiSetScanSessionVulnerabilityStatusResults(ApiResultsMixin):
    def __init__(
            self,
            api_key: str,
            vulnerability_status: VulnerabilityStatus,
            /,
            scan_id: str,
            result_id: str,
            vuln_id: str):
        super().__init__("PUT", api_key, json=vulnerability_status.model_dump())
        self.url = f"{BASE_URL}/scans/{scan_id}/results/{result_id}/vulnerabilities/{vuln_id}/status"